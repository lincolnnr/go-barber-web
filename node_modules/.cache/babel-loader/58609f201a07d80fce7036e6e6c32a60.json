{"ast":null,"code":"var _jsxFileName = \"/Users/lincolnnogueira/Documents/Projects/go-barber-web/src/context/AuthContext.tsx\";\nimport React, { createContext, useCallback, useState } from 'react';\nimport api from '../services/api';\nexport const AuthContext = createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem('@GiBarber:tokne');\n    const user = localStorage.getItem('@GiBarber:user');\n\n    if (token && user) {\n      return {\n        token,\n        user: JSON.parse(user)\n      };\n    }\n  });\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const response = await api.post('sessions', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('@GiBarber:tokne', token);\n    localStorage.setItem('@GiBarber:user', JSON.stringify(user));\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      name: 'Lincoln',\n      signIn\n    }\n  }, children);\n};\nexport default AuthContext;","map":{"version":3,"sources":["/Users/lincolnnogueira/Documents/Projects/go-barber-web/src/context/AuthContext.tsx"],"names":["React","createContext","useCallback","useState","api","AuthContext","AuthProvider","children","data","setData","token","localStorage","getItem","user","JSON","parse","signIn","email","password","response","post","setItem","stringify","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAiBA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,CAAc,EAAd,CAAjC;AAEP,OAAO,MAAMK,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAY,MAAM;AAC9C,UAAMO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAd;AACA,UAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAb;;AAEA,QAAGF,KAAK,IAAIG,IAAZ,EACA;AACI,aAAO;AAACH,QAAAA,KAAD;AAAQG,QAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWF,IAAX;AAAd,OAAP;AACH;AAEJ,GAT+B,CAAhC;AAWA,QAAMG,MAAM,GAAGd,WAAW,CAAE,OAAM;AAACe,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAN,KAA4B;AACpD,UAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAJ,CAAS,UAAT,EAAqB;AACxCH,MAAAA,KADwC;AAExCC,MAAAA;AAFwC,KAArB,CAAvB;AAKA,UAAM;AAACR,MAAAA,KAAD;AAAQG,MAAAA;AAAR,QAAgBM,QAAQ,CAACX,IAA/B;AAEAG,IAAAA,YAAY,CAACU,OAAb,CAAqB,iBAArB,EAAwCX,KAAxC;AACAC,IAAAA,YAAY,CAACU,OAAb,CAAqB,gBAArB,EAAuCP,IAAI,CAACQ,SAAL,CAAeT,IAAf,CAAvC;AACH,GAVyB,EAUvB,EAVuB,CAA1B;AAYA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACU,MAAAA,IAAI,EAAE,SAAP;AAAkBP,MAAAA;AAAlB;AAA7B,KACKT,QADL,CADJ;AAKH,CA7BM;AA+BP,eAAeF,WAAf","sourcesContent":["import React, { createContext, useCallback, useState } from 'react';\nimport api from '../services/api';\n\ninterface AuthState {\n    token: string;\n    user: object; \n}\n\ninterface SignInCredentials {\n    email  : string;\n    password: string;\n}\n\ninterface AuthContext {\n    name: string;\n    signIn(credentials: SignInCredentials): Promise<void>;\n}\n\nexport const AuthContext = createContext<AuthContext>({} as AuthContext);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n    const [data, setData] = useState<AuthState>(() => {\n        const token = localStorage.getItem('@GiBarber:tokne');\n        const user = localStorage.getItem('@GiBarber:user');\n\n        if(token && user)\n        {\n            return {token, user: JSON.parse(user)};\n        }\n\n    });\n\n    const signIn = useCallback( async({email, password}) => { \n        const response = await api.post('sessions', {\n            email,\n            password,\n        }); \n\n        const {token, user} = response.data;\n\n        localStorage.setItem('@GiBarber:tokne', token);\n        localStorage.setItem('@GiBarber:user', JSON.stringify(user));\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{name: 'Lincoln', signIn}}>\n            {children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}