{"ast":null,"code":"var _jsxFileName = \"/Users/lincolnnogueira/Documents/Projects/go-barber-web/src/pages/Signin/index.tsx\";\nimport React, { useCallback, useRef } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Container, Content, Background } from './styles';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErros';\nimport logoImg from \"../../assets/logo.svg\";\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nconst SignIn = () => {\n  const formRef = useRef(null);\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail válido'),\n        password: Yup.string().min(6, 'Senha deve conter minímo de 6 dígitos')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n    } catch (err) {\n      var _formRef$current2;\n\n      const errors = getValidationErrors(err);\n      (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Go Barber\"\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(\"h1\", null, \"Fa\\xE7a seu logon\"), /*#__PURE__*/React.createElement(Input, {\n    icon: FiMail,\n    name: \"email\",\n    placeholder: \"E-mail\"\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    icon: FiLock,\n    placeholder: \"Senha\"\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\"\n  }, \"Entrar\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"forgot\"\n  }, \"Esqueci minha senha\")), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\"\n  }, /*#__PURE__*/React.createElement(FiLogIn, null), \" Criar Conta\")), /*#__PURE__*/React.createElement(Background, null));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/lincolnnogueira/Documents/Projects/go-barber-web/src/pages/Signin/index.tsx"],"names":["React","useCallback","useRef","FiLogIn","FiMail","FiLock","Container","Content","Background","Form","Yup","getValidationErrors","Input","Button","SignIn","formRef","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","password","min","validate","abortEarly","err","errors","logoImg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,QAAwC,gBAAxC;AACA,SAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,UAA5B,QAA6C,UAA7C;AAEA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;;AAIA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAC3B,QAAMC,OAAO,GAAGb,MAAM,CAAc,IAAd,CAAtB;AAEA,QAAMc,YAAY,GAAGf,WAAW,CAAC,MAAOgB,IAAP,IAAwB;AACrD,QAAI;AAAA;;AACA,0BAAAF,OAAO,CAACG,OAAR,sEAAiBC,SAAjB,CAA2B,EAA3B;AAEA,YAAMC,MAAM,GAAGV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CAAmB;AAC9BC,QAAAA,KAAK,EAAEb,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,EAA4CF,KAA5C,CAAkD,yBAAlD,CADuB;AAE9BG,QAAAA,QAAQ,EAAEhB,GAAG,CAACc,MAAJ,GAAaG,GAAb,CAAiB,CAAjB,EAAoB,uCAApB;AAFoB,OAAnB,CAAf;AAKA,YAAMP,MAAM,CAACQ,QAAP,CAAgBX,IAAhB,EAAsB;AACxBY,QAAAA,UAAU,EAAE;AADY,OAAtB,CAAN;AAKH,KAbD,CAaE,OAAOC,GAAP,EAAW;AAAA;;AACT,YAAMC,MAAM,GAAGpB,mBAAmB,CAACmB,GAAD,CAAlC;AAEA,2BAAAf,OAAO,CAACG,OAAR,wEAAiBC,SAAjB,CAA2BY,MAA3B;AACH;AACJ,GAnB+B,EAmB7B,EAnB6B,CAAhC;AAsBJ,sBACI,oBAAC,SAAD,qBACI,oBAAC,OAAD,qBACI;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAmB,IAAA,GAAG,EAAC;AAAvB,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEjB,OAAX;AAAoB,IAAA,QAAQ,EAAEC;AAA9B,kBACI,oDADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEZ,MAAb;AAAqB,IAAA,IAAI,EAAC,OAA1B;AAAkC,IAAA,WAAW,EAAC;AAA9C,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,IAAI,EAAEC,MAA7C;AAAqD,IAAA,WAAW,EAAC;AAAjE,IAHJ,eAII,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,cAJJ,eAKI;AAAG,IAAA,IAAI,EAAC;AAAR,2BALJ,CAFJ,eASI;AAAG,IAAA,IAAI,EAAC;AAAR,kBAAW,oBAAC,OAAD,OAAX,iBATJ,CADJ,eAYI,oBAAC,UAAD,OAZJ,CADJ;AAeE,CAxCF;;AA0CA,eAAeS,MAAf","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport {Container, Content, Background} from './styles';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErros';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nconst SignIn: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n\n    const handleSubmit = useCallback(async (data: object) => {\n        try {\n            formRef.current?.setErrors({});\n\n            const schema = Yup.object().shape({\n                email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail válido'),\n                password: Yup.string().min(6, 'Senha deve conter minímo de 6 dígitos'),  \n            });\n\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n\n            \n        } catch (err){\n            const errors = getValidationErrors(err);\n\n            formRef.current?.setErrors(errors);\n        }\n    }, []);\n\n\nreturn(\n    <Container>\n        <Content>\n            <img src={logoImg} alt=\"Go Barber\"/>\n            <Form ref={formRef} onSubmit={handleSubmit}>\n                <h1>Faça seu logon</h1>\n                <Input icon={FiMail} name=\"email\" placeholder=\"E-mail\" />\n                <Input type=\"password\" name=\"password\" icon={FiLock} placeholder=\"Senha\" />\n                <Button type=\"submit\">Entrar</Button>\n                <a href=\"forgot\">Esqueci minha senha</a>\n            </Form>\n            <a href=\"\"><FiLogIn /> Criar Conta</a>\n        </Content>\n        <Background />\n    </Container>   \n)};\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}