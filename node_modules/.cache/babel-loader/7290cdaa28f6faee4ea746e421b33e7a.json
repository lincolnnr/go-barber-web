{"ast":null,"code":"var _jsxFileName = \"/Users/lincolnnogueira/Documents/Projects/go-barber-web/src/pages/SignUp/index.tsx\";\nimport React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiUser, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Container, Content, Background } from './styles';\nimport logoImg from \"../../assets/logo.svg\";\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nconst SignUp = () => {\n  const formRef = useRef(null);\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail válido'),\n        password: Yup.string().min(6, 'Senha deve conter minímo de 6 dígitos')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({\n        name: 'Nome obrigatório'\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Background, null), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Go Barber\"\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(\"h1\", null, \"Fa\\xE7a seu cadastro\"), /*#__PURE__*/React.createElement(Input, {\n    icon: FiUser,\n    name: \"nome\",\n    placeholder: \"Nome\"\n  }), /*#__PURE__*/React.createElement(Input, {\n    icon: FiMail,\n    name: \"email\",\n    placeholder: \"E-mail\"\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    icon: FiLock,\n    placeholder: \"Senha\"\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\"\n  }, \"Cadastrar\")), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\"\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, null), \" Voltar para logon\")));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/lincolnnogueira/Documents/Projects/go-barber-web/src/pages/SignUp/index.tsx"],"names":["React","useCallback","useRef","FiArrowLeft","FiMail","FiUser","FiLock","Form","Yup","Container","Content","Background","Input","Button","SignUp","formRef","handleSubmit","data","schema","object","shape","name","string","required","email","password","min","validate","abortEarly","current","setErrors","err","console","log","logoImg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAqCC,MAArC,QAAmD,gBAAnD;AAEA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,UAA5B,QAA6C,UAA7C;;AAIA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAC3B,QAAMC,OAAO,GAAGb,MAAM,CAAc,IAAd,CAAtB;AAEA,QAAMc,YAAY,GAAGf,WAAW,CAAC,MAAOgB,IAAP,IAAwB;AACrD,QAAI;AAAA;;AACA,YAAMC,MAAM,GAAGV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CAAmB;AAC9BC,QAAAA,IAAI,EAAEb,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CADwB;AAE9BC,QAAAA,KAAK,EAAEhB,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,EAA4CC,KAA5C,CAAkD,yBAAlD,CAFuB;AAG9BC,QAAAA,QAAQ,EAAEjB,GAAG,CAACc,MAAJ,GAAaI,GAAb,CAAiB,CAAjB,EAAoB,uCAApB;AAHoB,OAAnB,CAAf;AAMA,YAAMR,MAAM,CAACS,QAAP,CAAgBV,IAAhB,EAAsB;AACxBW,QAAAA,UAAU,EAAE;AADY,OAAtB,CAAN;AAIA,0BAAAb,OAAO,CAACc,OAAR,sEAAiBC,SAAjB,CAA2B;AACvBT,QAAAA,IAAI,EAAE;AADiB,OAA3B;AAGH,KAdD,CAcE,OAAOU,GAAP,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAlB+B,EAkB7B,EAlB6B,CAAhC;AAoBA,sBACA,oBAAC,SAAD,qBACI,oBAAC,UAAD,OADJ,eAEI,oBAAC,OAAD,qBACI;AAAK,IAAA,GAAG,EAAEG,OAAV;AAAmB,IAAA,GAAG,EAAC;AAAvB,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEnB,OAAX;AAAoB,IAAA,QAAQ,EAAEC;AAA9B,kBACI,uDADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEX,MAAb;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,WAAW,EAAC;AAA7C,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAED,MAAb;AAAqB,IAAA,IAAI,EAAC,OAA1B;AAAkC,IAAA,WAAW,EAAC;AAA9C,IAHJ,eAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,IAAI,EAAEE,MAA7C;AAAqD,IAAA,WAAW,EAAC;AAAjE,IAJJ,eAKI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,iBALJ,CAFJ,eASI;AAAG,IAAA,IAAI,EAAC;AAAR,kBAAW,oBAAC,WAAD,OAAX,uBATJ,CAFJ,CADA;AAeF,CAtCF;;AAwCA,eAAeQ,MAAf","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiUser,FiLock } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport {Container, Content, Background} from './styles';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nconst SignUp: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n\n    const handleSubmit = useCallback(async (data: object) => {\n        try {\n            const schema = Yup.object().shape({\n                name: Yup.string().required('Nome obrigatório'),\n                email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail válido'),\n                password: Yup.string().min(6, 'Senha deve conter minímo de 6 dígitos'),  \n            });\n\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            \n            formRef.current?.setErrors({\n                name: 'Nome obrigatório',\n            });\n        } catch (err){\n            console.log(err);\n        }\n    }, []);\n\n    return (\n    <Container>\n        <Background />\n        <Content>\n            <img src={logoImg} alt=\"Go Barber\"/>\n            <Form ref={formRef} onSubmit={handleSubmit}  >\n                <h1>Faça seu cadastro</h1>\n                <Input icon={FiUser} name=\"nome\" placeholder=\"Nome\" />\n                <Input icon={FiMail} name=\"email\" placeholder=\"E-mail\" />\n                <Input type=\"password\" name=\"password\" icon={FiLock} placeholder=\"Senha\" />\n                <Button type=\"submit\">Cadastrar</Button>\n            </Form>\n            <a href=\"\"><FiArrowLeft /> Voltar para logon</a>\n        </Content>\n    </Container>   \n)};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}