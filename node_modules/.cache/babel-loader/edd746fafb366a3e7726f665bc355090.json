{"ast":null,"code":"var _jsxFileName = \"/Users/lincolnnogueira/Documents/Projects/go-barber-web/src/pages/Signin/index.tsx\";\nimport React, { useCallback, useRef } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Container, Content, Background } from './styles';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { useAuth } from '../../context/AuthContext';\nimport getValidationErrors from '../../utils/getValidationErros';\nimport logoImg from \"../../assets/logo.svg\";\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nconst SignIn = () => {\n  const formRef = useRef(null);\n  const {\n    signIn\n  } = useAuth();\n  console.log(user);\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail válido'),\n        password: Yup.string().required('Senha obrigatória')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      signIn({\n        email: data.email,\n        password: data.password\n      });\n    } catch (err) {\n      var _formRef$current2;\n\n      const errors = getValidationErrors(err);\n      (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n      console.log(errors);\n    }\n  }, [signIn]);\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Go Barber\"\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(\"h1\", null, \"Fa\\xE7a seu logon\"), /*#__PURE__*/React.createElement(Input, {\n    icon: FiMail,\n    name: \"email\",\n    placeholder: \"E-mail\"\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    icon: FiLock,\n    placeholder: \"Senha\"\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\"\n  }, \"Entrar\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"forgot\"\n  }, \"Esqueci minha senha\")), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\"\n  }, /*#__PURE__*/React.createElement(FiLogIn, null), \" Criar Conta\")), /*#__PURE__*/React.createElement(Background, null));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/lincolnnogueira/Documents/Projects/go-barber-web/src/pages/Signin/index.tsx"],"names":["React","useCallback","useRef","FiLogIn","FiMail","FiLock","Container","Content","Background","Form","Yup","useAuth","getValidationErrors","Input","Button","SignIn","formRef","signIn","console","log","user","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","password","validate","abortEarly","err","errors","logoImg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,QAAwC,gBAAxC;AACA,SAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,UAA5B,QAA6C,UAA7C;AAEA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,OAAT,QAAwB,2BAAxB;AAEA,OAAOC,mBAAP,MAAgC,gCAAhC;;AAIA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAOA,MAAMC,MAAgB,GAAG,MAAM;AAE3B,QAAMC,OAAO,GAAGd,MAAM,CAAc,IAAd,CAAtB;AAEA,QAAM;AAAEe,IAAAA;AAAF,MAAaN,OAAO,EAA1B;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,QAAMC,YAAY,GAAGpB,WAAW,CAAC,MAAOqB,IAAP,IAAgC;AAC7D,QAAI;AAAA;;AACA,0BAAAN,OAAO,CAACO,OAAR,sEAAiBC,SAAjB,CAA2B,EAA3B;AAEA,YAAMC,MAAM,GAAGf,GAAG,CAACgB,MAAJ,GAAaC,KAAb,CAAmB;AAC9BC,QAAAA,KAAK,EAAElB,GAAG,CAACmB,MAAJ,GACFC,QADE,CACO,oBADP,EAEFF,KAFE,CAEI,yBAFJ,CADuB;AAI9BG,QAAAA,QAAQ,EAAErB,GAAG,CAACmB,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB;AAJoB,OAAnB,CAAf;AAOA,YAAML,MAAM,CAACO,QAAP,CAAgBV,IAAhB,EAAsB;AACxBW,QAAAA,UAAU,EAAE;AADY,OAAtB,CAAN;AAGAhB,MAAAA,MAAM,CAAC;AACHW,QAAAA,KAAK,EAAEN,IAAI,CAACM,KADT;AAEHG,QAAAA,QAAQ,EAAET,IAAI,CAACS;AAFZ,OAAD,CAAN;AAKH,KAlBD,CAkBE,OAAOG,GAAP,EAAW;AAAA;;AACT,YAAMC,MAAM,GAAGvB,mBAAmB,CAACsB,GAAD,CAAlC;AAEA,2BAAAlB,OAAO,CAACO,OAAR,wEAAiBC,SAAjB,CAA2BW,MAA3B;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;AACH;AACJ,GAzB+B,EAyB7B,CAAClB,MAAD,CAzB6B,CAAhC;AA4BJ,sBACI,oBAAC,SAAD,qBACI,oBAAC,OAAD,qBACI;AAAK,IAAA,GAAG,EAAEmB,OAAV;AAAmB,IAAA,GAAG,EAAC;AAAvB,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEpB,OAAX;AAAoB,IAAA,QAAQ,EAAEK;AAA9B,kBACI,oDADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEjB,MAAb;AAAqB,IAAA,IAAI,EAAC,OAA1B;AAAkC,IAAA,WAAW,EAAC;AAA9C,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,IAAI,EAAEC,MAA7C;AAAqD,IAAA,WAAW,EAAC;AAAjE,IAHJ,eAII,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,cAJJ,eAKI;AAAG,IAAA,IAAI,EAAC;AAAR,2BALJ,CAFJ,eASI;AAAG,IAAA,IAAI,EAAC;AAAR,kBAAW,oBAAC,OAAD,OAAX,iBATJ,CADJ,eAYI,oBAAC,UAAD,OAZJ,CADJ;AAeE,CAnDF;;AAqDA,eAAeU,MAAf","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport {Container, Content, Background} from './styles';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport { useAuth } from '../../context/AuthContext';\n\nimport getValidationErrors from '../../utils/getValidationErros';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\ninterface SignInFormData {\n    email: string;\n    password: string;\n}\n\nconst SignIn: React.FC = () => {\n\n    const formRef = useRef<FormHandles>(null);\n\n    const { signIn } = useAuth();\n\n    console.log(user);\n\n    const handleSubmit = useCallback(async (data: SignInFormData) => {\n        try {\n            formRef.current?.setErrors({});\n\n            const schema = Yup.object().shape({\n                email: Yup.string()\n                    .required('E-mail obrigatório')\n                    .email('Digite um e-mail válido'),\n                password: Yup.string().required('Senha obrigatória'),  \n            });\n\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n            signIn({\n                email: data.email,\n                password: data.password,\n            });\n\n        } catch (err){\n            const errors = getValidationErrors(err);\n\n            formRef.current?.setErrors(errors);\n            console.log(errors);\n        }\n    }, [signIn]);\n\n\nreturn(\n    <Container>\n        <Content>\n            <img src={logoImg} alt=\"Go Barber\"/>\n            <Form ref={formRef} onSubmit={handleSubmit}  >\n                <h1>Faça seu logon</h1>\n                <Input icon={FiMail} name=\"email\" placeholder=\"E-mail\" />\n                <Input type=\"password\" name=\"password\" icon={FiLock} placeholder=\"Senha\" />\n                <Button type=\"submit\">Entrar</Button>\n                <a href=\"forgot\">Esqueci minha senha</a>\n            </Form>\n            <a href=\"\"><FiLogIn /> Criar Conta</a>\n        </Content>\n        <Background />\n    </Container>   \n)};\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}